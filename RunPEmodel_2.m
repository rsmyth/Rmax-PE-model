clear
fig = 1; 
% Load input file generated by PrepInputData
pname = pwd;
cd([pname,'/Input'])

[Infile, Inpath, dex] = uigetfile('*.mat', 'Select an input data file');
load(Infile);

if Infile(1:5) == 'RmaxR'
    model = 1;
elseif Infile(1:5) == 'Rmax0'
    model = 2;
end

z = [0:0.1:ceil(max(max(zp)))]; % depth for light field
% To reduce run time for troubleshooting
%zp = zp(:,1:5);
cd(pname)
 


% Find Epur  (NOTE: PUR correction determined in umolphotons/m2/s)
if exist('PUR', 'var') == 0
[PUR Epar] = calcPUR(PA.PA, PA.irradiance, Io(:,px), z, alb, Kd(px), d(px));  %Epur(:,j) = sum(PA.*QPAR.*exp(-kpar.*z(j)));  % Lehmann, et al. 2004 eq. 6 

Epur = PUR.*Epar; 
units.Epar = 'W/m2'; units.Epur = 'W/m2';

save([Inpath Infile], 'Epar', 'Epur','units', '-append')

%fig = input('Enter 1 to see plots  ');

end



% Weighted irradiance at depth. 
if exist('Einhuv') == 0
Einhuv = calcEinhuv(epsilon(bx), Io(:,ux), time, alb, Kd(ux), z, units);  %(1/s)
 
Einh = Einhuv+(Epur*epsPar); % (1/s) weighted inhibitory irradiance. Sobrino, et al. 2005 eq. 3 except Epur for Epar
units.Einh = '1/s';
if fig == 1
figure; plot(Einh([1 24 49],:),-z)
end
save([Inpath Infile], 'Einh', 'units','-append')

end 

% Use for T model but not for Emax model BWFs (b/c of time dependence in
% later). See Pbstat_Tmod.m 
% % Calculate static Pb (need to check units!)
% X = 1./Einh; X(X>1) = 1; % = min function in spreadsheet and Sobrino
% Pst = Pbs*(1-exp(-Epur/Ek)).*X;  %needs time conversion of Pb?
% %figure; plot(Pst([1:100:end],:), -z);

% find particle time course
Epurz = nan*ones(length(time), size(zp,2)); Einhz = nan*ones(length(time), size(zp,2));
for j = 1:size(zp,2)  %particles
part = round(zp(:,j)*10)/10; %round to resolution of z as defined above
z = round(z*10)/10;       % get rid of weird remainders 
zx = [];
for t = 1:length(time)
    zx(t) = find(z==part(t));  %index matriz depth closest to particle depth. could be improved- results in depths up to +/- 0.05m of particle depth
    Einhz(t,j) = Einh(t,zx(t));
    Epurz(t,j) =  Epur(t,zx(t));
    %zpart(i) = z(zx);
end
end
%figure; plot(time, zp(:,11)-zpart', '.')
%figure; plot(time, Epurz(:,[1:100:end])); figure; plot(time, Xz(:,[1:100:end]));

% potential (uninhibited) photosynthesis
[Pbpot units] = calcPbpot(Epurz, Ek, Pbs, units); 

%Inhibition along particle trajectory, depend on BWF type, 1 = RmaxR, 2= Rmax0
if model == 1
    [Pinh domain] = Pinhib(Rmax, R, Einhz, mean(diff(time)));
    [PinhEr, domain(:,:,2)] = Pinhib(0.5*Rmax, R, Einhz, mean(diff(time)));
    [PinhEr(:,:,2), domain(:,:,3)] = Pinhib(1.5*Rmax, R, Einhz, mean(diff(time)));
    [PinhNDR, domain(:,:,4)] = Pinhib_NDR(Rmax, R, Einhz, Epurz, mean(diff(time)), Ek);
    [PinhNDREr, domain(:,:,5)] = Pinhib_NDR(0.5*Rmax, R, Einhz, Epurz, mean(diff(time)), Ek);
    [PinhNDREr(:,:,2), domain(:,:,6)] = Pinhib_NDR(1.5*Rmax, R, Einhz, Epurz, mean(diff(time)), Ek);
    
elseif model ==2
    [Pinh domain] = Pinhib_noR(Rmax, Einhz, mean(diff(time)));
    [PinhEr domain(:,:,2)] = Pinhib_noR(0.5*Rmax, Einhz,  mean(diff(time)));
    [PinhEr(:,:,2) domain(:,:,4)] = Pinhib_noR(1.5*Rmax, Einhz, mean(diff(time)));
    [PinhNDR, domain(:,:,2)] = Pinhib_noR_NDR(Rmax, Einhz, Epurz, mean(diff(time)), Ek);
    [PinhNDREr domain(:,:,5)] = Pinhib_noR_NDR(0.5*Rmax, Einhz, Epurz, mean(diff(time)), Ek);
    [PinhNDREr(:,:,2) domain(:,:,6)] = Pinhib_noR_NDR(1.5*Rmax, Einhz, Epurz, mean(diff(time)), Ek);
end

% Pb predicted
Pbpred = Pbpot.*Pinh*3600; %/s to /hr
units.Pbpred = 'gC/gChl/hr';
Pb_avg = mean(Pbpred');


% Plot results
parts = round(1600*rand(3,1));  %define random subset of particles for plotting

% figure; set(gcf, 'position',[-18    80   888   884]);
% subplot(511); plot(time/3600, nansum(Io(:,ux)')/1000); hold on; plot(time/3600, nansum(Io(:,px)')/1000, 'r'); 
% ylabel('Irradiance (W/m2)'); legend('UV','PAR','location','northwest'); 
% subplot(512); plot(time/3600, -zp(:,parts)); hold on; plot(time([1 length(time)])/3600, -[zeu zeu], 'k--');
% ylabel('Depth(m)');  
% subplot(514); plot(time/3600, Pbpot(:,parts)*3600); ylabel('Pbpot (gC/gchl/hr)'); 
% subplot(513); plot(time/3600, Pinh(:,parts)); ylim([0.7 1.01]); ylabel('Inhibition');
% subplot(515); plot(time/3600, Pbpred(:,parts)); ylim([0 2]); xlabel('time (hr)'); ylabel('Pbpred (gC/gchl/hr)'); 

if fig == 1
figure; set(gcf, 'position',[-18    80   888   884]); title(num2str(round(doy)));
subplot(411); plot(time/3600, nansum(Io(:,ux)')/1000, 'm'); hold on; plot(time/3600, nansum(Io(:,px)')/1000, 'g'); 
ylabel('Irradiance (W/m2)'); legend('UV','PAR','location','northwest'); title([Infile(1:5),' ',Infile(7:10), ' ', Infile(12:end-4)]);
subplot(412); plot(time/3600, -zp(:,parts)); hold on; %plot(time([1 length(time)])/3600, -[zeu zeu], 'k--');
ylabel('Depth(m)');  
subplot(413); plot(time/3600, Pinh(:,parts)); ylim([0 1.1]); ylabel('Inhibition');
subplot(414); plot(time/3600, Pbpot(:,parts)*3600, '--'); hold on; plot(time/3600, Pbpred(:,parts)); 
ylim([0 1.8]); xlabel('time (hr)'); ylabel('Pbpred (gC/gchl/hr)'); %legend('w/inhib','w/o inhib')
end
% Save output
yn = input('Enter 1 if you would like to save  ' ); 

if yn == 1; 
    outname = ['Pb_',Infile]%input('Enter filename  ', 's')

    cd([pname,'/Output'])

% if run == 2
% outname = ['Pb_Rmax_static',num2str(Rmax),'.mat']; 
% else
% outname = ['Pb_Rmax_traj',num2str(Rmax),'.mat'];     
% end
if model == 1
save(outname, 'Pbpred', 'time', 'zx', 'units', 'Einh', 'Pb_avg', 'Pbpot', 'Epar', 'Epur', 'z', ...
    'zp',  'Rmax',  'Einhz', 'Epurz', 'Pinh', 'domain', 'Io', 'R', 'Infile', 'Ek', 'Pbs', 'PinhNDR', 'd', 'alb', 'PinhEr', 'PinhNDREr' )
elseif model == 2
save(outname, 'Pbpred', 'time', 'zx', 'units', 'Einh', 'Pb_avg', 'Pbpot', 'Epar', 'Epur', 'z', ...
    'zp',  'Rmax',  'Einhz', 'Epurz', 'Pinh', 'domain', 'Io', 'Infile', 'Ek', 'Pbs', 'PinhNDR', 'd', 'alb', 'PinhEr', 'PinhNDREr' )
end

cd(pname)
% Hourly average Pb in 0.5 m vertical bins
DepthAvgParts(outname, pname); 



end 
%plot_Pmodels;
